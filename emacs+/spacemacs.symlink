;; -*- mode: emacs-lisp -*-
;; This file is loaded by Spacemacs at startup.
;; It must be stored in the home directory.

(setq-default dotspacemacs-configuration-layers
              '(
                ;; (perspectives :variables perspective-enable-persp-projectile t)
                (auto-completion :variables auto-completion-return-key-behavior nil
                                 auto-completion-tab-key-behavior 'complete
                                 auto-completion-complete-with-key-sequence "ht")
                (git :variables git-enable-github-support t)
                extra-langs emacs-lisp latex ranger-control c-c++ haskell html javascript ruby colors lua trishume tex-math-magic markdown racket finance go org syntax-checking shell-scripts pcre2el deft eshell d vagrant))

(setq-default dotspacemacs-additional-packages '(helm-git-grep))

;; Misc Snippets

(defun my-copy ()
  (interactive)
  (mac-handle-copy nil))

(defun my-paste ()
  (interactive)
  (setq x-select-enable-clipboard t)
  (yank)
  (setq x-select-enable-clipboard nil))

;; Keybinds
(global-set-key [(hyper a)] 'mark-whole-buffer)
(global-set-key [(hyper v)] 'my-paste)
(global-set-key [(hyper c)] 'my-copy)
(global-set-key [(hyper s)] 'save-buffer)
(global-set-key [(hyper l)] 'goto-line)
(global-set-key [(hyper w)]
                (lambda () (interactive) (delete-window)))
(global-set-key [(hyper k)]
                (lambda () (interactive) (delete-frame)))
(global-set-key [(hyper z)] 'undo-tree-undo)
(global-set-key (kbd "H-Z") 'undo-tree-redo)
(global-set-key [(hyper q)] 'save-buffers-kill-emacs)
(global-set-key [(hyper n)] 'make-frame)

;; mac switch meta key
(defun mac-switch-meta nil
  "switch meta between Option and Command"
  (setq mac-option-modifier 'meta)
  (setq mac-command-modifier 'hyper)
  )

;; (setq ns-pop-up-frames t)
;; (setq mac-mouse-wheel-smooth-scroll t)
;; (setq dnd-open-file-other-window t)
(setq x-select-enable-clipboard nil)

(defun my-open-file (orig-fun &rest args)
  (let* ((f (dnd-get-local-file-name (car args) t)))
    (if (and f (file-accessible-directory-p f))
        (find-file-other-frame f)
      (apply orig-fun args))))

(advice-add 'dnd-open-local-file :around #'my-open-file)

;; esc quits
(defun minibuffer-keyboard-quit ()
  "Abort recursive edit.
In Delete Selection mode, if the mark is active, just deactivate it;
then it takes a second \\[keyboard-quit] to abort the minibuffer."
  (interactive)
  (if (and delete-selection-mode transient-mark-mode mark-active)
      (setq deactivate-mark  t)
    (when (get-buffer "*Completions*") (delete-windows-on "*Completions*"))
    (abort-recursive-edit)))
;; (define-key evil-normal-state-map [escape] 'keyboard-quit)
;; (define-key evil-visual-state-map [escape] 'keyboard-quit)
(define-key minibuffer-local-map [escape] 'minibuffer-keyboard-quit)
(define-key minibuffer-local-ns-map [escape] 'minibuffer-keyboard-quit)
(define-key minibuffer-local-completion-map [escape] 'minibuffer-keyboard-quit)
(define-key minibuffer-local-must-match-map [escape] 'minibuffer-keyboard-quit)
(define-key minibuffer-local-isearch-map [escape] 'minibuffer-keyboard-quit)
;; (global-set-key [escape] 'evil-exit-emacs-state)

;; Variables


(setq-default dotspacemacs-excluded-packages
              '(jedi))

(defun my-stop-fricking-auto-newline ()
  'stop)

(defun figlet-region (&optional b e)
  (interactive "r")
  (shell-command-on-region b e "figlet")
  (comment-region b e))

;; Functions

(defun dotspacemacs/init ()
  "User initialization for Spacemacs. This function is called at the very
 startup."
 (add-to-list 'exec-path "/Users/tristan/Library/Haskell/bin/" "/Users/tristan/box/")
 (add-to-list 'exec-path "/Applications/Racket/bin/")
 (set-variable 'ycmd-server-command '("python" "/Users/tristan/bin/ycmd/ycmd"))
 (setq evil-escape-key-sequence "mw"
       ;; dotspacemacs-smartparens-strict-mode t
       ;; dotspacemacs-search-tools '("pt" "ag" "ack" "grep")
       )
 ;; (setq-default solarized-high-contrast-mode-line t)
  )

(defun dotspacemacs/config ()
  "This is were you can ultimately override default Spacemacs configuration.
This function is called at the very end of Spacemacs initialization."
  (mac-switch-meta)
  (define-key evil-motion-state-map "j" #'evil-next-visual-line)
  (define-key evil-motion-state-map "k" #'evil-previous-visual-line)

  (eval-after-load 'company-dabbrev-code
    '(add-to-list 'company-dabbrev-code-modes 'enh-ruby-mode))

  (evil-leader/set-key
    "ff" 'ido-find-file
    "oa" 'helm-apropos
    "og" 'helm-git-grep
    "ol" 'latex/build
    ";" 'helm-M-x
    "oe" 'eval-expression)
  (eval-after-load 'evil-org
    '(evil-define-key 'normal evil-org-mode-map "O" '(lambda () (interactive) (evil-org-eol-call 'org-insert-heading))))

  (eval-after-load 'projectile
    '(progn
       (defun trishume/frame-title ()
         (interactive)
         (if (projectile-project-p) (projectile-project-name)))
       (setq frame-title-format '(:eval (or (trishume/frame-title) "%b")))))

  ;; Delete trailing whitespace on save instead of showing it
  (defun dotspacemacs/maybe-clear-whitespace ()
    (interactive)
    (when (not (eq major-mode 'org-mode)) (delete-trailing-whitespace)))
  (add-hook 'before-save-hook #'dotspacemacs/maybe-clear-whitespace)
  (add-hook 'prog-mode-hook (lambda ()
                              (interactive)
                              (setq show-trailing-whitespace nil)) t)
  ;; Disable smartparens for most pairs, my editing style doesn't play well with it
  ;; (eval-after-load 'smartparens
  ;;   '(progn
  ;;      (sp-pair "(" nil :actions :rem)
  ;;      (sp-pair "[" nil :actions :rem)
  ;;      (sp-pair "'" nil :actions :rem)
  ;;      (sp-pair "\"" nil :actions :rem)))

  (setq deft-directory "~/Box/Notes"
        erc-autojoin-channels-alist '(("freenode.net" "#emacs" "#deskthority" "#geekhack" "#csc")))

  (push '("\\.h$" . c++-mode) auto-mode-alist)
  ;; (push '("^\*helm.+\*$" :regexp t :height 0.4) popwin:special-display-config)

  (setq-default company-idle-delay 0.0
                ;; org-bullets-bullet-list '("■" "◆" "▲" "▶")
                helm-grep-default-command "git grep -n%cH --color=never --full-name -e %p %f"
                vc-follow-symlinks t
                projectile-use-git-grep t
                evil-ex-substitute-global t
                system-uses-terminfo nil
                git-gutter-fr:side 'left-fringe
                helm-pt-insert-at-point nil
                helm-ag-insert-at-point nil
                scss-compile-at-save nil
                ruby-deep-indent-paren nil
                enh-ruby-deep-indent-paren nil
                lua-indent-level 2
                json-encoding-default-indentation 2
                js-indent-level 2
                css-indent-offset 2
                evil-shift-width 2
                web-mode-markup-indent-offset 2
                web-mode-css-indent-offset 2
                web-mode-code-indent-offset 2
                c-default-style "k&r"
                c-basic-offset 2
                c-toggle-hungry-state 1
                c-toggle-auto-newline -1
                c-hanging-semi&comma-criteria '(my-stop-fricking-auto-newline))

  (global-hungry-delete-mode)
  (global-company-mode)
  (add-hook 'markdown-mode-hook '(lambda () (company-mode -1)))
  (add-hook 'org-mode-hook '(lambda () (company-mode -1)))

  (setq evil-move-cursor-back nil)
  (setq TeX-view-program-selection '((output-pdf "PDF Viewer")))
  (setq TeX-view-program-list
        '(("PDF Viewer" "/Applications/Skim.app/Contents/SharedSupport/displayline -b -g %n %o %b"))))

(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ac-ispell-requires 4 t)
 '(ahs-case-fold-search nil)
 '(ahs-default-range (quote ahs-range-whole-buffer))
 '(ahs-idle-interval 0.25)
 '(ahs-idle-timer 0 t)
 '(ahs-inhibit-face-list nil)
 '(ledger-post-account-alignment-column 2)
 '(paradox-github-token t)
 '(racket-memory-limit 128)
 '(racket-program "/Applications/Racket/bin/racket")
 '(racket-racket-program "/Applications/Racket/bin/racket")
 '(racket-raco-program "/Applications/Racket/bin/raco")
 '(raco-program "/Applications/Racket/bin/raco")
 '(ring-bell-function (quote ignore) t)
  '(safe-local-variable-values
     (quote
       ((encoding . utf-8)
         (eval when
           (fboundp
             (quote rainbow-mode))
           (rainbow-mode 1))
         (flycheck-clang-include-path . "/Applications/Arduino.app/Contents/Resources/Java/hardware/teensy/cores/teensy3"))))
 '(sp-autoescape-string-quote nil))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(company-tooltip-common ((t (:inherit company-tooltip :weight bold :underline nil))))
 '(company-tooltip-common-selection ((t (:inherit company-tooltip-selection :weight bold :underline nil)))))
